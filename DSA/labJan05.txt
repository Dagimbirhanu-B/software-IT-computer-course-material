#include <iostream>
using namespace std;
struct node{
	int id;
	char fname[15];
	double gpa;
       node *next;
}*head=NULL;
/*===============================================
Excercise1:Implement the function below:

void inserBefore(int position)
-this function accepts position as an input and inserts the new node
 before the node at the given position. Forexample, if position is 3, the new
 node is inserted before the 3rd node.

Excercise2:Implement the function below:

void inserAfter(int position)
-this function accepts position as an input and inserts the new node
 after the node at the given position. Forexample, if position is 3, the new
 node is inserted after the 3rd node.

Excercise4:Implement the function below:

void deleteBefore(int position)
-this function accepts position as an input and deletes the node
 before the node at the given position. Forexample, if position is 3, the 
 node before the 3rd node is deleted.

Excercise4:Implement the function below:

void deleteAfter(int position)
-this function accepts position as an input and deletes the node
 after the node at the given position. Forexample, if position is 3, the 
 node after the 3rd node is deleted.

*/
void deleteBeginning(){
      if(head==NULL)
          cout<<"Under flow\n";
      else{
             node*temp=head;
             head=head->next;
             delete temp;
        }

}

void deleteEnd(){
      if(head==NULL)
          cout<<"Under flow\n";
      else if(head->next==NULL){
      	node*temp=head;
      	   head=NULL;
      	   delete temp;
      	   
	  }
    else{
    	   node*temp1,*temp2;
    	   temp1=head;
    	   while(temp1->next!=NULL){
    	   	   temp2=temp1;
    	   	   temp1=temp1->next;
		   }
		   temp2->next=NULL;
		   delete temp1;
             
        }

}


void display(){
	node* curr=head;
	
	if(head==NULL){
		cout<<"The list is empty.\n";
	}
else{

	while(curr!=NULL){
		cout<<curr->id<<"\t"<<curr->fname<<"\t"<<curr->gpa<<endl;
		curr=curr->next;
	}
}
}


void insertBeginning(){
  	node* temp=getData();
  	if(head!=NULL)
  	  temp->next=head;
  	  
  	  head=temp;
  }

void insertLast(){
  	node* temp=getData();
  	if(head==NULL)
  	  head=temp;
  	else{
  		node*curr=head;
  		while(curr->next!=NULL)
  		  curr=curr->next;
  		  
  		curr->next=temp;
	  } 
  	 
  }
int main(int argc, char** argv) {
	char ans;
	int choice;
	do{
		cout<<"=======MENU=======\n";
		cout<<"Press 1 to insert at beginning.\n";
		cout<<"Press 2 to insert at end.\n";
		cout<<"Press 3 to delete from beginning.\n";
		cout<<"Press 4 to delete from end.\n";
		cout<<"Press 5 to display.\n";
		cout<<"Your choice:";
		cin>>choice;
		switch(choice){
			case 1:
				insertBeginning();
				break;
			case 2:
				insertLast();
				break;
			case 3:
			 deleteBeginning();
				break;
			case 4:
			deleteEnd();
				break;
		        case 5:
				display();
				break;
		}
		cout<<"Do you want to continue?(y/n).\n";
		cin>>ans;
		
	}while(ans!='n');
	return 0;
}